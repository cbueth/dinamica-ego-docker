# Docker Build, Test, and Push to GitHub Container Registry
name: Docker Build

on:
  push:
    branches:
      - main
    tags:
      - '*'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/dinamica-ego

jobs:

  build:
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    name: Test Docker image
    runs-on: ubuntu-latest

    needs: build # Run this job after the build job

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test DinamicaConsole Help
        run: |
            output=$(docker run "${{ env.IMAGE_NAME }}":latest -help)
            echo "$output"
            if echo "$output" | grep -q "Options:"; then
                echo "Test passed: 'Options:' found in stdout."
            else
                echo "Test failed: 'Options:' not found in stdout."
                exit 1
            fi

      - name: Test DinamicaConsole Version
        run: |
            output=$(docker run "${{ env.IMAGE_NAME }}":latest -version)
            echo "$output"
            if echo "$output" | grep -q "Dinamica EGO"; then
                echo "Test passed: 'Dinamica EGO' found in stdout."
            else
                echo "Test failed: 'Dinamica EGO' not found in stdout."
                exit 1
            fi

      - name: Test /bin/bash Entry Point
        run: docker run --entrypoint /bin/bash "${{ env.IMAGE_NAME }}":latest -c "exit 0"

      - name: Test Dinamica EGO Models
        # Run Dinamica EGO test models from the repository workspace/tests/* folder
        # docker run -v tests:/model -it "${{ env.IMAGE_NAME }}":latest $model
        run: |
          for model in $(ls ${{ github.workspace }}/tests/*.ego); do
              docker run -v ${{ github.workspace }}/tests:/model "${{ env.IMAGE_NAME }}":latest $(basename $model)
          done

  push:
    name: Push Docker image
    runs-on: ubuntu-latest

    needs: test # Run this job after the test job

    if: startsWith(github.ref, 'refs/tags/') # Only run this job on tags

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ github.ref }}
          docker push $IMAGE_NAME:${{ github.ref }}
